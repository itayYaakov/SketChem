!(function (e) {
    e || (e = Kekule.$jsRoot),
        (Kekule.EmscriptenUtils = {
            DEF_MODULE_NAME: "Module",
            _createdModules: {},
            _getActualModule: function (o) {
                return e[o || t.DEF_MODULE_NAME];
            },
            isSupported: function (e) {
                return void 0 !== t._getActualModule(e);
            },
            getRootModule: function (e, o) {
                var u = t._createdModules[e];
                if (u) return u;
                var n = t._getActualModule(e);
                return (u = n), "function" == typeof n && (u = n(o)), u && (t._createdModules[e] = u), u;
            },
            setRootModule: function (e, o) {
                t._createdModules[e] = o;
            },
            getModuleObj: function (e) {
                return "object" == typeof e ? e : t.getRootModule(e);
            },
            getMember: function (e, o) {
                return (t.getModuleObj(o) || {})[e];
            },
            getClassCtor: function (e, o) {
                return (t.getModuleObj(o) || {})[e];
            },
            cwrap: function (e, o, u, n) {
                var l = t.getModuleObj(n);
                return l && l.cwrap && l.cwrap(e, o, u);
            },
            initModule: function (e, o, u) {
                e || (e = Kekule.$jsRoot.document);
                var n = o.moduleName,
                    l = o.moduleInitEventName,
                    r = o.moduleInitCallbackName,
                    i = o.creationOptions,
                    d = function (e) {
                        u && u(e);
                    };
                if (t.isModuleReady(n)) d();
                else
                    try {
                        if (l && e && Kekule.X) {
                            var c = function () {
                                d(), Kekule.X.Event.removeListener(e, l, c);
                            };
                            Kekule.X.Event.addListener(e, l, c);
                        } else
                            r &&
                                (Kekule.$jsRoot[r] = function () {
                                    d();
                                });
                        n && t.getRootModule(n, i);
                    } catch (e) {
                        throw (d(e), e);
                    }
            },
            isModuleReady: function (e) {
                return !!t._createdModules[e];
            },
            ensureModuleReady: function (e, o, u) {
                return t.initModule(e, o, u);
            },
            loadScript: function (e, o, u, n) {
                u || (u = Kekule.$jsRoot.document);
                var l = function (e) {
                    e ? o(e) : t.initModule(u, n, o);
                };
                if (Kekule.environment.isNode)
                    try {
                        var r = Kekule.environment.nodeRequire(e);
                        n.moduleName && (Kekule.$jsRoot[n.moduleName] = r), l();
                    } catch (e) {
                        throw (l(e), e);
                    }
                else Kekule.ScriptFileUtils.appendScriptFile(u, e, l);
            },
        });
    var t = Kekule.EmscriptenUtils;
})(this);
